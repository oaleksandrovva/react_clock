{"version":3,"sources":["Clock/Clock.jsx","App.js","index.js"],"names":["Clock","state","currentTime","Date","this","time","setInterval","setState","console","log","toLocaleTimeString","prevProps","name","props","clearInterval","className","React","Component","App","isClockVisible","clockName","showClock","hideClock","setRandomName","Math","trunc","random","toFixed","onClick","type","ReactDOM","render","document","getElementById"],"mappings":"4NAKaA,G,MAAb,4MACEC,MAAQ,CACNC,YAAa,IAAIC,MAFrB,uDAKE,WAAqB,IAAD,OAClBC,KAAKC,KAAOC,aAAY,WACtB,EAAKC,SAAS,CACZL,YAAa,IAAIC,OAInBK,QAAQC,IAAI,EAAKR,MAAMC,YAAYQ,wBAClC,OAbP,gCAgBE,SAAmBC,GAAY,IACrBC,EAASR,KAAKS,MAAdD,KAEJD,EAAUC,OAASA,GAErBJ,QAAQC,IAAR,qCAA0CE,EAAUC,KAApD,eAA+DA,MArBrE,kCAyBE,WACEE,cAAcV,KAAKC,QA1BvB,oBA6BE,WAAU,IACAH,EAAgBE,KAAKH,MAArBC,YAER,OACE,uBAAGa,UAAU,aAAb,gBAEG,IACAb,EAAYQ,0BApCrB,GAA2BM,IAAMC,YCApBC,G,MAAb,4MACEjB,MAAQ,CACNkB,gBAAgB,EAChBC,UAAW,WAHf,EAMEC,UAAY,WACV,EAAKd,SAAS,CACZY,gBAAgB,KARtB,EAYEG,UAAY,WACV,EAAKf,SAAS,CACZY,gBAAgB,KAdtB,EAkBEI,cAAgB,WACd,EAAKhB,SAAS,CACZa,UAAYI,KAAKC,MAAsB,IAAhBD,KAAKE,UAAkBC,QAAQ,MApB5D,4CAwBE,WAAU,IAAD,EAC+BvB,KAAKH,MAAnCmB,EADD,EACCA,UAAWD,EADZ,EACYA,eAEnB,OACE,yBAAKJ,UAAU,OACb,wBAAIA,UAAU,cAAd,eACCI,GAAkB,kBAAC,EAAD,CAAOP,KAAMQ,IAChC,yBAAKL,UAAU,gBACb,4BAAQa,QAASxB,KAAKiB,UAAWQ,KAAK,UAAtC,cAGA,4BAAQD,QAASxB,KAAKkB,UAAWO,KAAK,UAAtC,cAGA,4BAAQD,QAASxB,KAAKmB,cAAeM,KAAK,UAA1C,yBAtCV,GAAyBb,IAAMC,YCD/Ba,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.d5474459.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Clock.scss';\n\nexport class Clock extends React.Component {\n  state = {\n    currentTime: new Date(),\n  }\n\n  componentDidMount() {\n    this.time = setInterval(() => {\n      this.setState({\n        currentTime: new Date(),\n      });\n\n      // eslint-disable-next-line\n      console.log(this.state.currentTime.toLocaleTimeString());\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { name } = this.props;\n\n    if (prevProps.name !== name) {\n      // eslint-disable-next-line\n      console.log(`The Clock was renamed from ${prevProps.name} to ${name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.time);\n  }\n\n  render() {\n    const { currentTime } = this.state;\n\n    return (\n      <p className=\"App__text\">\n        Current time:\n        {' '}\n        {currentTime.toLocaleTimeString()}\n      </p>\n    );\n  }\n}\n\nClock.propTypes = {\n  name: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport { Clock } from './Clock';\n\nimport './App.scss';\n\nexport class App extends React.Component {\n  state = {\n    isClockVisible: false,\n    clockName: 'no-name',\n  };\n\n  showClock = () => {\n    this.setState({\n      isClockVisible: true,\n    });\n  };\n\n  hideClock = () => {\n    this.setState({\n      isClockVisible: false,\n    });\n  };\n\n  setRandomName = () => {\n    this.setState({\n      clockName: (Math.trunc(Math.random() * 1000)).toFixed(0),\n    });\n  };\n\n  render() {\n    const { clockName, isClockVisible } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__title\">React clock</h1>\n        {isClockVisible && <Clock name={clockName} />}\n        <div className=\"App__buttons\">\n          <button onClick={this.showClock} type=\"button\">\n            Show Clock\n          </button>\n          <button onClick={this.hideClock} type=\"button\">\n            Hide Clock\n          </button>\n          <button onClick={this.setRandomName} type=\"button\">\n            Set random name\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}