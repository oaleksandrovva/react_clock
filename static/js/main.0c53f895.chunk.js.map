{"version":3,"sources":["Clock/Clock.jsx","App.js","index.js"],"names":["Clock","state","date","Date","this","time","setInterval","setState","console","log","toLocaleTimeString","prevProps","name","props","clearInterval","React","Component","App","isClockVisible","clockName","showClock","hideClock","setRandomName","Math","trunc","random","className","onClick","type","ReactDOM","render","document","getElementById"],"mappings":"uMAGaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,uDAKE,WAAqB,IAAD,OAClBC,KAAKC,KAAOC,aAAY,WACtB,EAAKC,SAAS,CACZL,KAAM,IAAIC,OAIZK,QAAQC,IAAI,EAAKR,MAAMC,KAAKQ,wBAC3B,OAbP,gCAgBE,SAAmBC,GAAY,IACrBC,EAASR,KAAKS,MAAdD,KAEJD,EAAUC,OAASA,GAErBJ,QAAQC,IAAR,qCAA0CE,EAAUC,KAApD,eAA+DA,MArBrE,kCAyBE,WACEE,cAAcV,KAAKC,QA1BvB,oBA6BE,WAAU,IACAH,EAASE,KAAKH,MAAdC,KAER,OACE,oCACGA,EAAKQ,0BAlCd,GAA2BK,IAAMC,WCEpBC,G,MAAb,4MACEhB,MAAQ,CACNiB,gBAAgB,EAChBC,UAAW,GAHf,EAMEC,UAAY,WACV,EAAKb,SAAS,CACZW,gBAAgB,KARtB,EAYEG,UAAY,WACV,EAAKd,SAAS,CACZW,gBAAgB,KAdtB,EAkBEI,cAAgB,WACd,EAAKf,SAAS,CACZY,UAAWI,KAAKC,MAAsB,IAAhBD,KAAKE,aApBjC,4CAwBE,WAAU,IAAD,EAC+BrB,KAAKH,MAAnCkB,EADD,EACCA,UAAWD,EADZ,EACYA,eAEnB,OACE,yBAAKQ,UAAU,OACb,wBAAIA,UAAU,cAAd,eACA,uBAAGA,UAAU,aAAb,gBAEG,IACAR,EAAiB,kBAAC,EAAD,CAAON,KAAMO,IAAgB,QAEjD,yBAAKO,UAAU,gBACb,4BAAQC,QAASvB,KAAKgB,UAAWQ,KAAK,UAAtC,cAGA,4BAAQD,QAASvB,KAAKiB,UAAWO,KAAK,UAAtC,cAGA,4BAAQD,QAASvB,KAAKkB,cAAeM,KAAK,UAA1C,yBA1CV,GAAyBb,IAAMC,YCD/Ba,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.0c53f895.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Clock extends React.Component {\n  state = {\n    date: new Date(),\n  }\n\n  componentDidMount() {\n    this.time = setInterval(() => {\n      this.setState({\n        date: new Date(),\n      });\n\n      // eslint-disable-next-line\n      console.log(this.state.date.toLocaleTimeString());\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { name } = this.props;\n\n    if (prevProps.name !== name) {\n      // eslint-disable-next-line\n      console.log(`The Clock was renamed from ${prevProps.name} to ${name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.time);\n  }\n\n  render() {\n    const { date } = this.state;\n\n    return (\n      <>\n        {date.toLocaleTimeString()}\n      </>\n    );\n  }\n}\n\nClock.propTypes = {\n  name: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport { Clock } from './Clock';\n\nimport './App.scss';\n\nexport class App extends React.Component {\n  state = {\n    isClockVisible: false,\n    clockName: 0,\n  };\n\n  showClock = () => {\n    this.setState({\n      isClockVisible: true,\n    });\n  };\n\n  hideClock = () => {\n    this.setState({\n      isClockVisible: false,\n    });\n  };\n\n  setRandomName = () => {\n    this.setState({\n      clockName: Math.trunc(Math.random() * 100),\n    });\n  };\n\n  render() {\n    const { clockName, isClockVisible } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__title\">React clock</h1>\n        <p className=\"App__text\">\n          Current time:\n          {' '}\n          {isClockVisible ? <Clock name={clockName} /> : 'none'}\n        </p>\n        <div className=\"App__buttons\">\n          <button onClick={this.showClock} type=\"button\">\n            Show Clock\n          </button>\n          <button onClick={this.hideClock} type=\"button\">\n            Hide Clock\n          </button>\n          <button onClick={this.setRandomName} type=\"button\">\n            Set random name\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}